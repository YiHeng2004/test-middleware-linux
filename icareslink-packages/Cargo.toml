[package]
name = "icareslink-packages"
version = "0.0.2" # actual version
edition = "2021"
publish = false
license = "GPL-3.0"
authors = ["iCARES"]
description = "A Modern Middleware"
#homepage = "https://upvpn.app"
repository = "https://github.com/YiHeng2004/test-middleware"


#
# DEBIAN PACKAGING
#
[package.metadata.deb]
name = "icareslink"
# Maintainer is first author in authors
# maintainer = ""
assets = [
    ["target/release/icareslink", "usr/bin/", "755"],
    ["target/release/icareslink-daemon", "/opt/icareslink/icareslink-daemon", "755"],
    ["linux/icareslink.desktop", "usr/share/applications/", "644"],
    ["icareslink-oss-licenses.html", "/opt/icareslink/icareslink-oss-licenses.html", "644"],
    ["../upvpn-assets/icons/32x32.png", "usr/share/icons/hicolor/32x32/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/128x128.png", "usr/share/icons/hicolor/128x128/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/128x128@2x.png", "usr/share/icons/hicolor/256x256/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/icon.png", "usr/share/icons/hicolor/512x512/apps/icareslink.png", "644"],
]
depends = "libwebkit2gtk-4.0-37 (>= 2.21.1), libgtk-3-0 (>= 3.21.4), libayatana-appindicator3-1"
maintainer-scripts = "linux/debian/maintainer-scripts/"
systemd-units = { unit-name = "icareslink-daemon", enable = true, start= true, restart-after-upgrade = false, stop-on-upgrade = true, unit-scripts = "linux/unit-scripts"}

[package.metadata.deb.variants.staging]
name = "icareslink-staging"
assets = [
    ["target/release/icareslink", "usr/bin/", "755"],
    ["target/release/icareslink-daemon", "/opt/icareslink/icareslink-daemon", "755"],
    ["linux/icareslink.desktop", "usr/share/applications/", "644"],
    ["icareslink-licenses.html", "/opt/icareslink/icareslink-oss-licenses.html", "644"],
    ["../upvpn-assets/icons/32x32.png", "usr/share/icons/hicolor/32x32/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/128x128.png", "usr/share/icons/hicolor/128x128/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/128x128@2x.png", "usr/share/icons/hicolor/256x256/apps/icareslink.png", "644"],
    ["../upvpn-assets/icons/icon.png", "usr/share/icons/hicolor/512x512/apps/icareslink.png", "644"],
    ["linux/staging-config/icareslink.conf.toml", "etc/icareslink/", "644"]
]

#
# RPM PACKAGING
#
[package.metadata.generate-rpm.requires]
"webkit2gtk4.0" = ">= 2.38.5"
"libappindicator-gtk3" = ">= 12.10.1"

[package.metadata.generate-rpm]
name = "icareslink"
assets = [
    { source = "target/release/icareslink", dest = "/usr/bin/icareslink", mode = "755" },
    { source = "target/release/icareslink-daemon", dest = "/opt/icareslink/icareslink-daemon", mode = "755" },
    { source = "linux/icareslink.desktop", dest = "/usr/share/applications/icareslink.desktop", mode = "644"},
    { source = "icareslink-oss-licenses.html", dest = "/opt/icareslink/icareslink-oss-licenses.html", mode =  "644"},
    { source = "linux/unit-scripts/icareslink-daemon.service", dest = "/usr/lib/systemd/system/icareslink-daemon.service", mode = "644"},
    { source = "../upvpn-assets/icons/32x32.png", dest = "/usr/share/icons/hicolor/32x32/apps/icareslink.png", mode = "644" },
    { source = "../upvpn-assets/icons/128x128.png", dest = "/usr/share/icons/hicolor/128x128/apps/icareslink.png", mode = "644" },
    {source = "../upvpn-assets/icons/128x128@2x.png", dest = "/usr/share/icons/hicolor/256x256/apps/icareslink.png", mode = "644"},
    {source = "../upvpn-assets/icons/icon.png", dest = "/usr/share/icons/hicolor/512x512/apps/icareslink.png", mode = "644"},
]
auto-req = "no"

# presinst
pre_install_script = '''
set -euo pipefail

# Stop daemon and UI

if which systemctl &> /dev/null; then
    if systemctl status icareslink-daemon &> /dev/null; then
        systemctl stop icareslink-daemon.service
        systemctl disable icareslink-daemon.service
        cp /var/log/icareslink/icareslink-daemon.log /var/log/icareslink/previous-icareslink-daemon.log \
            || echo "Failed to copy previous daemon log file"
    fi
fi

pkill -x "icareslink" || true
'''

# postinst
post_install_script = '''
set -e
systemctl enable "/usr/lib/systemd/system/icareslink-daemon.service"
systemctl start icareslink-daemon.service
'''

pre_uninstall_script = '''
set -euo pipefail

# Stop UI
pkill -x "icareslink" || true

is_number_re='^[0-9]+$'
# Check if we're running during an upgrade step on Fedora
# https://fedoraproject.org/wiki/Packaging:Scriptlets#Syntax
if [[ "$1" =~ $is_number_re ]] && [ $1 -gt 0 ]; then
    exit 0;
fi

if [[ "$1" == "upgrade" ]]; then
    exit 0;
fi

systemctl stop icareslink-daemon.service || true
systemctl disable icareslink-daemon.service || true
'''

post_uninstall_script = '''
set -euo pipefail

# remove log and configuration files
remove_log_and_configuration() {
    # all log files
    if [ -d /var/log/icareslink ]; then
        rm -r --interactive=never /var/log/icareslink/ || \
        echo "Failed to remove icareslink log files"
    fi

    # config files if any
    if [ -d /etc/icareslink ]; then
        rm -r --interactive=never /etc/icareslink/ || \
        echo "Failed to remove icareslink configuration files"
    fi
}

case "$@" in
    # apt purge; yum remove
    "0")
        remove_log_and_configuration
        ;;
esac
'''
